rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function hasValidUserData() {
      return isAuthenticated() && 
             request.auth.token.email_verified == true &&
             'department' in request.auth.token &&
             'role' in request.auth.token;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             request.auth.token.admin == true;
    }
    
    function isDeveloper() {
      return isAuthenticated() && 
             request.auth.token.developer == true;
    }
    
    function isTeacher() {
      return hasValidUserData() && 
             request.auth.token.role == 'teacher';
    }
    
    function isStudent() {
      return hasValidUserData() && 
             request.auth.token.role == 'student';
    }
    
    function belongsToSameDepartment(department) {
      return hasValidUserData() && 
             request.auth.token.department == department;
    }
    
    // User profiles collection
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      
      // Teachers can read student profiles in their department
      allow read: if isTeacher() && 
                     belongsToSameDepartment(resource.data.department);
      
      // Admins can read all user profiles
      allow read: if isAdmin();
    }
    
    // Routines collection - Main routine data
    match /routines/{routineId} {
      // All authenticated users can read routines for their department
      allow read: if hasValidUserData() && 
                     belongsToSameDepartment(resource.data.department);
      
      // Only admins and developers can write routine data
      allow write: if isAdmin() || isDeveloper();
      
      // Teachers can suggest updates (stored in a separate collection)
      allow create: if isTeacher() && 
                       belongsToSameDepartment(resource.data.department) &&
                       resource.data.type == 'suggestion';
    }
    
    // Routine suggestions from teachers
    match /routine_suggestions/{suggestionId} {
      // Teachers can create suggestions for their department
      allow create: if isTeacher() && 
                       belongsToSameDepartment(resource.data.department) &&
                       resource.data.teacherId == request.auth.uid;
      
      // Teachers can read their own suggestions
      allow read: if isTeacher() && resource.data.teacherId == request.auth.uid;
      
      // Admins can read and update all suggestions
      allow read, update: if isAdmin();
      
      // No one can delete suggestions (audit trail)
    }
    
    // User preferences and settings
    match /user_preferences/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Analytics and usage data (write-only for users, read for admins)
    match /analytics/{document} {
      allow create: if isAuthenticated();
      allow read: if isAdmin();
    }
    
    // FCM tokens for push notifications
    match /fcm_tokens/{userId} {
      allow read, write: if isOwner(userId);
      allow read: if isAdmin(); // For sending targeted notifications
    }
    
    // App configuration (read-only for users, write for admins)
    match /app_config/{configId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Announcements
    match /announcements/{announcementId} {
      // All authenticated users can read announcements for their department
      allow read: if hasValidUserData() && 
                     (resource.data.department == request.auth.token.department ||
                      resource.data.department == 'all');
      
      // Only admins and teachers can create announcements
      allow create: if (isAdmin() || isTeacher()) &&
                       (resource.data.department == request.auth.token.department ||
                        (isAdmin() && resource.data.department == 'all'));
      
      // Only the creator or admin can update/delete
      allow update, delete: if isAdmin() || 
                              (isTeacher() && resource.data.createdBy == request.auth.uid);
    }
    
    // Feedback and bug reports
    match /feedback/{feedbackId} {
      allow create: if isAuthenticated() && 
                       resource.data.userId == request.auth.uid;
      allow read: if isOwner(resource.data.userId) || isAdmin();
    }
    
    // Class attendance (for teachers)
    match /attendance/{attendanceId} {
      // Teachers can manage attendance for their classes
      allow read, write: if isTeacher() && 
                            resource.data.teacherId == request.auth.uid;
      
      // Students can read their own attendance
      allow read: if isStudent() && 
                     resource.data.studentId == request.auth.uid;
      
      // Admins can read all attendance records
      allow read: if isAdmin();
    }
    
    // System logs (admin only)
    match /system_logs/{logId} {
      allow read, write: if isAdmin();
    }
    
    // Temporary/cache data that expires
    match /temp_data/{document} {
      allow read, write: if isAuthenticated() && 
                           resource.data.expiresAt > request.time &&
                           resource.data.userId == request.auth.uid;
    }
    
    // Default deny rule for any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
